-- @path MM=/metamodelo_diagram_clase_uml/metamodelado/metamodelo_simplificado_diagrama_clase.ecore
-- @path MM1=/metamodelo_entidad_relacion/metamodelo/metamodelo_entidad_relacion.ecore

module transformacion;
create OUT : MM1 from IN : MM;

rule Package2Schema {
	from
		entrada : MM!Package
	to
		salida : MM1!Schema (
			name <- entrada.name,
			table <- entrada.Class
		)
}

rule Class2Table {
	from
		entrada : MM!Class
	to
		salida : MM1!Table (
			name <- entrada.name,
			column <- entrada.attribute,
			pkey <- primaryKeyColumn
		),
		primaryKeyColumn: MM1!Column (
			name <- 'id',
			type <- 'Integer'
		)
}

rule Attribute2Column {
	from
		entrada : MM!Attribute(not entrada.EsRelacion())
	to
		salida : MM1!Column (
			name <- entrada.name,
			type <- entrada.type.name
		)
}

rule Attribute2ForeignKey {
	from
		entrada : MM!Attribute(entrada.EsRelacion())
	to
		salida : MM1!ForeignKey ()
}

helper context MM!Attribute def: EsRelacion(): Boolean =
	if self.type.oclIsTypeOf(MM!Class) then
		true
	else
		false
	endif;

